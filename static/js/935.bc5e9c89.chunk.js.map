{"version":3,"file":"static/js/935.bc5e9c89.chunk.js","mappings":"yRAEaA,EAAWC,EAAAA,GAAAA,GAAH,mKAURC,EAAQD,EAAAA,GAAAA,GAAH,yCAILE,EAAaF,EAAAA,GAAAA,IAAH,4DAKVG,EAAYH,EAAAA,GAAAA,GAAH,0CAITI,EAAYJ,EAAAA,GAAAA,EAAH,sC,SCZP,SAASK,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE4BC,EAAAA,EAAAA,IAAaN,GAFzC,OAEUO,EAFV,OAGIH,EAAQG,GAHZ,gDAKIC,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACV,KAGF,SAACP,EAAD,UACGU,EAAKQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACR,UAACpB,EAAD,YACE,SAACC,EAAD,CACEoB,IACEH,EAAY,yCAC0BA,GAD1B,sCAIdI,IAAKH,KAEP,SAACjB,EAAD,UAAYiB,KACZ,SAAChB,EAAD,0BACA,SAACA,EAAD,UAAYiB,MAXFH,EADJ,KAiBf,C,iMC3CM,SAAeM,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAU,uBAD5B,cACCC,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACkBL,EAAAA,EAAAA,IAAA,8BAAiCK,IADnD,cACCJ,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAqCb,GAArC,uFACkBO,EAAAA,EAAAA,IAAA,iBAAoBP,IADtC,cACCQ,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAef,EAAtB,+CAAO,OAAP,oBAAO,WAA4BM,GAA5B,uFACkBO,EAAAA,EAAAA,IAAA,iBAAoBP,EAApB,aADlB,cACCQ,EADD,yBAEEA,EAASC,KAAKlB,MAFhB,kEAKA,SAAeuB,EAAtB,+CAAO,OAAP,oBAAO,WAA+Bd,GAA/B,uFACkBO,EAAAA,EAAAA,IAAA,iBAAoBP,EAApB,aADlB,cACCQ,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAvBPH,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CAAEQ,QAAS,mC","sources":["components/Cast/Cast.styles.jsx","components/Cast/Cast.jsx","services/servicesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: center;\n  list-style: none;\n  padding: 0;\n  text-align: center;\n`;\n\nexport const Actor = styled.li`\n  width: 160px;\n`;\n\nexport const ActorPhoto = styled.img`\n  width: 160px;\n  display: block;\n`;\n\nexport const ActorName = styled.h3`\n  margin: 8px 0;\n`;\n\nexport const Character = styled.p`\n  margin: 0;\n`;","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchGetCast } from 'services/servicesApi';\nimport PropTypes from 'prop-types';\n\nimport {\n  CastList,\n  Actor,\n  ActorPhoto,\n  ActorName,\n  Character,\n} from './Cast.styles';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    async function getMovieCast() {\n      try {\n        const movieCast = await fetchGetCast(movieId);\n        setCast(movieCast);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getMovieCast();\n  }, [movieId]);\n\n  return (\n    <CastList>\n      {cast.map(({ id, profile_path, name, character }) => (\n        <Actor key={id}>\n          <ActorPhoto\n            src={\n              profile_path\n                ? `https://image.tmdb.org/t/p/w300${profile_path}`\n                : `https://via.placeholder.com/160x240`\n            }\n            alt={name}\n          />\n          <ActorName>{name}</ActorName>\n          <Character>Character:</Character>\n          <Character>{character}</Character>\n        </Actor>\n      ))}\n    </CastList>\n  );\n}\n\nCast.propTypes = {\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = { api_key: '7408b4f50805114f113b5482c05df3a7' };\n\nexport async function fetchGetTrending() {\n  const response = await axios.get('/trending/movie/day');\n  return response.data.results;\n}\n\nexport async function fetchGetMovies(query) {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data.results;\n}\n\nexport async function fetchGetMoviesDetails(id) {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n}\n\nexport async function fetchGetCast(id) {\n  const response = await axios.get(`/movie/${id}/credits`);\n  return response.data.cast;\n}\n\nexport async function fetchGetReviews(id) {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data.results;\n}\n"],"names":["CastList","styled","Actor","ActorPhoto","ActorName","Character","Cast","movieId","useParams","useState","cast","setCast","useEffect","fetchGetCast","movieCast","console","log","getMovieCast","map","id","profile_path","name","character","src","alt","fetchGetTrending","axios","response","data","results","fetchGetMovies","query","fetchGetMoviesDetails","fetchGetReviews","api_key"],"sourceRoot":""}