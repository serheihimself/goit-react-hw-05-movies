{"version":3,"file":"static/js/752.b83bb435.chunk.js","mappings":"uQAEaA,E,QAAaC,GAAAA,GAAH,iE,SCIR,SAASC,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE4BC,EAAAA,EAAAA,IAAgBN,GAF5C,OAEUO,EAFV,OAGIH,EAAWG,GAHf,gDAKIC,QAAQC,IAAI,aAAZ,MALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACV,KAGF,yBACIG,EAAQQ,QAGR,SAACd,EAAD,UACGM,EAAQS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,qCAAaD,MACb,uBAAIC,MAFGF,EADE,OAHf,qEAaP,C,iMCjCM,SAAeG,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAU,uBAD5B,cACCC,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACkBL,EAAAA,EAAAA,IAAA,8BAAiCK,IADnD,cACCJ,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAqCV,GAArC,uFACkBI,EAAAA,EAAAA,IAAA,iBAAoBJ,IADtC,cACCK,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA4BX,GAA5B,uFACkBI,EAAAA,EAAAA,IAAA,iBAAoBJ,EAApB,aADlB,cACCK,EADD,yBAEEA,EAASC,KAAKM,MAFhB,kEAKA,SAAenB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BO,GAA/B,uFACkBI,EAAAA,EAAAA,IAAA,iBAAoBJ,EAApB,aADlB,cACCK,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAvBPH,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CAAES,QAAS,mC","sources":["components/Reviews/Reviews.styles.jsx","components/Reviews/Reviews.jsx","services/servicesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewList = styled.ul`\n  list-style: none;\n  padding: 0 20px;\n`;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { fetchGetReviews } from 'services/servicesApi';\nimport { ReviewList } from './Reviews.styles';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    async function getMovieReviews() {\n      try {\n        const movieCast = await fetchGetReviews(movieId);\n        setReviews(movieCast);\n      } catch (error) {\n        console.log('error :>> ', error);\n      }\n    }\n    getMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      {!reviews.length ? (\n        <p>We don`t have any reviews for this movie</p>\n      ) : (\n        <ReviewList>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h3>Author: {author}</h3>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ReviewList>\n      )}\n    </div>\n  );\n}\n\nReviews.propTypes = {\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = { api_key: '7408b4f50805114f113b5482c05df3a7' };\n\nexport async function fetchGetTrending() {\n  const response = await axios.get('/trending/movie/day');\n  return response.data.results;\n}\n\nexport async function fetchGetMovies(query) {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data.results;\n}\n\nexport async function fetchGetMoviesDetails(id) {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n}\n\nexport async function fetchGetCast(id) {\n  const response = await axios.get(`/movie/${id}/credits`);\n  return response.data.cast;\n}\n\nexport async function fetchGetReviews(id) {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data.results;\n}\n"],"names":["ReviewList","styled","Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","fetchGetReviews","movieCast","console","log","getMovieReviews","length","map","id","author","content","fetchGetTrending","axios","response","data","results","fetchGetMovies","query","fetchGetMoviesDetails","fetchGetCast","cast","api_key"],"sourceRoot":""}