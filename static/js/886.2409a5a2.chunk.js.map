{"version":3,"file":"static/js/886.2409a5a2.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styles.jsx","components/MovieList/MovieList.jsx","components/SearchBar/SearchBar.styles.jsx","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx","pages/Movies/Movies.styles.jsx","services/servicesApi.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const FilmsList = styled.ul`\n  max-width: 500px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const LinkStyled = styled(Link)`\n  font-size: 18px;\n  line-height: 1.5em;\n  text-decoration: none;\n  color: #000;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { FilmsList, LinkStyled } from './MovieList.styles';\n\nexport function MovieList({ movies, linkTo }) {\n  const location = useLocation();\n\n  return (\n    <FilmsList>\n      {movies.map(({ title, id }) => (\n        <li key={id}>\n          <LinkStyled to={`${linkTo ?? ''}${id}`} state={{ from: location }}>\n            {title}\n          </LinkStyled>\n        </li>\n      ))}\n    </FilmsList>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n  linkTo: PropTypes.string,\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const SearchForm = styled(Form)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 400px;\n  margin-left: auto;\n  margin-right: auto;\n  background-color: #fff;\n  border: 1px solid #d1d1d1;\n  border-radius: 5px;\n  overflow: hidden;\n`;\n\nexport const SearchButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 36px;\n  height: 36px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  font-size: 28px;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchInput = styled(Field)`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 18px;\n  line-height: 1.5em;\n  border: none;\n  outline: none;\n  padding: 0 16px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport { BiSearchAlt } from 'react-icons/bi';\nimport { SearchForm, SearchButton, SearchInput } from './SearchBar.styles';\n\nexport function Searchbar({ handleSearchInput }) {\n  return (\n    <div>\n      <Formik\n        initialValues={{ input: '' }}\n        onSubmit={({ input }, { resetForm }) => {\n          if (input.trim() === '') return;\n          handleSearchInput(input);\n          resetForm();\n        }}\n      >\n        <SearchForm>\n          <SearchInput\n            type=\"text\"\n            name=\"input\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n          ></SearchInput>{' '}\n          <SearchButton type=\"submit\">\n            <BiSearchAlt />\n          </SearchButton>\n        </SearchForm>\n      </Formik>\n    </div>\n  );\n}\n\nSearchbar.propTypes = {\n  handleSearchInput: PropTypes.func.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchGetMovies } from 'services/servicesApi';\nimport { MovieList } from '../../components/MovieList/MovieList';\nimport { Searchbar } from '../../components/SearchBar/SearchBar';\nimport { Container } from './Movies.styles';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchQuery.get('query') ?? '';\n    async function getFilmsByName() {\n      try {\n        const filmsByName = await fetchGetMovies(query);\n        setMovies(filmsByName);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getFilmsByName();\n  }, [searchQuery]);\n\n  function handleSearchInput(query) {\n    const nextQuery = query !== '' ? { query } : {};\n    setSearchQuery(nextQuery);\n  }\n\n  return (\n    <Container>\n      <Searchbar handleSearchInput={handleSearchInput}></Searchbar>\n      <MovieList movies={movies} />\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 1000px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 24px;\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = { api_key: '7408b4f50805114f113b5482c05df3a7' };\n\nexport async function fetchGetTrending() {\n  const response = await axios.get('/trending/movie/day');\n  return response.data.results;\n}\n\nexport async function fetchGetMovies(query) {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data.results;\n}\n\nexport async function fetchGetMoviesDetails(id) {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n}\n\nexport async function fetchGetCast(id) {\n  const response = await axios.get(`/movie/${id}/credits`);\n  return response.data.cast;\n}\n\nexport async function fetchGetReviews(id) {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data.results;\n}\n"],"names":["FilmsList","styled","LinkStyled","Link","MovieList","movies","linkTo","location","useLocation","map","title","id","to","state","from","SearchForm","Form","SearchButton","SearchInput","Field","Searchbar","handleSearchInput","initialValues","input","onSubmit","resetForm","trim","type","name","autoComplete","autoFocus","placeholder","Movies","useState","setMovies","useSearchParams","searchQuery","setSearchQuery","useEffect","query","get","fetchGetMovies","filmsByName","console","log","getFilmsByName","Container","fetchGetTrending","axios","response","data","results","fetchGetMoviesDetails","fetchGetCast","cast","fetchGetReviews","api_key"],"sourceRoot":""}